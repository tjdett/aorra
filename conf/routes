# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           @controllers.Application.index
POST    /login                      @controllers.Application.postLogin
GET     /invite                     @controllers.Application.invite
POST    /invite                     @controllers.Application.postInvite
GET     /user-exists/:email         @controllers.Application.userExists(email: String)
GET     /user-unverified/:email     @controllers.Application.userUnverified(email: String)
GET     /user/:email/verify/:token  @controllers.Application.verify(email: String, token: String)
POST    /user/:email/verify/:token  @controllers.Application.postVerify(email: String, token: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

GET     /folder/:folderId               @controllers.FileStoreController.showFolder(folderId: String)
GET     /folder/:folderId/archive       @controllers.FileStoreController.downloadFolder(folderId)
POST    /folder/:folderId/files         @controllers.FileStoreController.uploadToFolder(folderId)
POST    /folder/:folderId/folders       @controllers.FileStoreController.mkdir(folderId, mkdir: String)
DELETE  /folder/:folderId               @controllers.FileStoreController.delete(folderId)

GET     /file/:fileId                   @controllers.FileStoreController.showFile(fileId: String)
GET     /file/:fileId/version/latest    @controllers.FileStoreController.downloadFile(fileId)
# PUT     /file/:fileId         @controllers.FileStoreController.updateFile(fileId)
DELETE  /file/:fileId                   @controllers.FileStoreController.delete(fileId)

GET     /notifications              @controllers.FileStoreAsync.notifications

# play-authenticate
GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)
GET     /authenticate/:provider/denied     @controllers.Application.oAuthDenied(provider: String)

GET    /charts/                     @controllers.Chart.charts(chart="")
GET    /charts/*chart               @controllers.Chart.charts(chart)
